apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "retrieval.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "retrieval.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/component: iot
    app.kubernetes.io/part-of: {{ template "retrieval.name" . }}
    app.kubernetes.io/managed-by: tiller
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "retrieval.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "retrieval.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      ## TODO: Future Have the Init Container Dynamically Sign the CSR
      # tag::init[]
      initContainers:
      - name: retrieval-migration
        image: "{{ .Values.services.retrieval.image.repository }}:{{ .Values.services.retrieval.image.tag }}" # <1>
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:        # <2>
        - "retrieval_svc"
        - "--"
        - "migration"
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "iot.fullname" . }}
              key: databaseUrl
      # end::init[]
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.services.retrieval.image.repository }}:{{ .Values.services.retrieval.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        # tag::http[]
        command: ["./retrieval_svc"]
        ports:
        - name: http
          containerPort: {{ .Values.services.retrieval.port }}
          protocol: TCP
        # end::http[]
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 3
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 3
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "iot.fullname" . }}
              key: databaseUrl
        - name: SERVER_ADDR
          value: "{{ .Values.services.retrieval.host }}"
        - name: PORT
          value: "{{ .Values.services.retrieval.port }}"
        resources:
          {{- toYaml .Values.services.retrieval.resources | nindent 12 }}
